version: 2.1
orbs:
    vpn: titel-media/openvpn@0.1.1
jobs:
    set-up-vpn:
      machine:
        image: ubuntu-2004:current
  
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
      steps:
        
   #     - vpn/install
   #     - vpn/connect
        - run:
            name: Install OpenVPN
            command: |
              sudo apt-get update
              sudo apt-get install openvpn openvpn-systemd-resolved  

        - run:
            name: Check IP before VPN connection
            command: |
              ip a
              echo "Public IP before VPN connection is $(curl checkip.amazonaws.com)" 
        - run:
            name: VPN Setup
            background: true
            command: |
              echo $VPN_CLIENT_CONFIG | base64 --decode > /tmp/config.ovpn  
  
              if grep -q auth-user-pass /tmp/config.ovpn; then  
                if [ -z "${VPN_USER:-}" ] || [ -z "${VPN_PASSWORD:-}" ]; then  
                  echo "Your VPN client is configured with a user-locked profile. Make sure to set the VPN_USER and VPN_PASSWORD environment variables"  
                  exit 1  
                else  
                  printf "$VPN_USER\\n$VPN_PASSWORD" > /tmp/vpn.login  
                fi  
              fi  
  
              SYS_RES_DNS=$(systemd-resolve --status | grep 'DNS Servers'|awk '{print $3}')  
              echo $SYS_RES_DNS  
  
              phone_home=$(ss -Hnto state established '( sport = :ssh )' | head -n1 | awk '{ split($4, a, ":"); print a[1] }') || $(sudo netstat -an | grep ':22 .*ESTABLISHED' | head -n1 | awk '{ split($5, a, ":"); print a[1] }')  
              echo $phone_home  
  
              vpn_command=(sudo openvpn  
                --config /tmp/config.ovpn  
                --route $SYS_RES_DNS 255.255.255.255 net_gateway  
                --route 169.254.0.0 255.255.0.0 net_gateway  
                --script-security 2  
                --up /etc/openvpn/update-systemd-resolved --up-restart  
                --down /etc/openvpn/update-systemd-resolved --down-pre  
                --dhcp-option DOMAIN-ROUTE .)  
  
              if grep -q auth-user-pass /tmp/config.ovpn; then
                vpn_command+=(--auth-user-pass /tmp/vpn.login)
              fi  
  
              if [ -n "$phone_home" ]; then  
                vpn_command+=(--route $phone_home 255.255.255.255 net_gateway)  
              fi  
  
              for IP in $(host runner.circleci.com | awk '{ print $4; }')  
                do  
                  vpn_command+=(--route $IP 255.255.255.255 net_gateway)  
                  echo $IP  
              done  
  
              "${vpn_command[@]}" > /tmp/openvpn.log  

        - run:
            count=60
            while [ ${count} -lt 0 ]; do

              if [ -f /tmp/openvpn.log ] && [ "$(grep -c "Initialization Sequence Completed" /tmp/openvpn.log)" != 0 ]; then
                echo "VPN connected"
                break
              else
                echo "Attempting to connect to VPN server..."
                (( count-=1 ))
                sleep 1
              fi
            done
            # name: Wait for the connection to be established and check IP  
            # command: |  
            #   until [ -f /tmp/openvpn.log ] && [ "$(grep -c "Initialization Sequence Completed" /tmp/openvpn.log)" != 0 ]; do  
            #     echo "Attempting to connect to VPN server..."  
            #     sleep 1;  
            #   done

        #       printf "\nVPN connected\n"  
        #       printf "\nPublic IP is now $(curl checkip.amazonaws.com)\n"
        - checkout
        - run:
            name: Install OpenJDK 17
            command: |
              sudo apt-get update && sudo apt-get install openjdk-17-jdk
              sudo update-alternatives --set java /usr/lib/jvm/java-17-openjdk-amd64/bin/java
              sudo update-alternatives --set javac /usr/lib/jvm/java-17-openjdk-amd64/bin/javac
              java -version
        - run:
            name: "Run Test"
            command: "./gradlew :web-ui:test --tests 'tests.ra.exclusive_listings.SimpleTest.testOpenPS'"
        - run:
            name: "Generate ALlure report"   
            command: " ./gradlew web-ui:allureReport"
        - store_test_results:
                path: web-ui/build/test-results
        - store_artifacts:
                path: web-ui/build/reports/allure-report/allureReport
        
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - set-up-vpn:
         context: 
           - vpn-context
